package board.main;

import java.util.List;
import java.util.Scanner;

import board.service.BoardService;
import board.service.BoardServiceImpl;
import board.vo.BoardVO;
import kr.or.ddit.member.vo.MemberVO;


/*		위의 테이블을 작성하고 게시판을 관리하는
다음 기능들을 구현하시오.

기능 구현하기 ==> 전체 목록 출력, 새글작성, 수정, 삭제, 검색 
 
------------------------------------------------------------

게시판 테이블 구조 및 시퀀스

create table jdbc_board(
    board_no number not null,  -- 번호(자동증가)
    board_title varchar2(100) not null, -- 제목
    board_writer varchar2(50) not null, -- 작성자
    board_date date not null,   -- 작성날짜
    board_content zclob,     -- 내용
    constraint pk_jdbc_board primary key (board_no)
);
create sequence board_seq
    start with 1   -- 시작번호
    increment by 1; -- 증가값
		
----------------------------------------------------------

 시퀀스의 다음 값 구하기
	시퀀스이름.nextVal
*/
public class BoardMain {
	// 서비스객체 멤버변수 선언
		private BoardService boardService;
		
		public BoardMain() {
			boardService = new BoardServiceImpl();
		}
		
		private Scanner scan = new Scanner(System.in); 
	
	public void displayMenu(){
		System.out.println();
		System.out.println("----------------------");
		System.out.println("  === 작 업 선 택 ===");
		System.out.println("  1. 전체목록 출력");
		System.out.println("  2. 새 글 작성");
		System.out.println("  3. 자료 수정");
		System.out.println("  4. 자료 삭제");
		System.out.println("  5. 자료 검색");
		System.out.println("  6. 작업 끝.");
		System.out.println("----------------------");
		System.out.print("원하는 작업 선택 >> ");
	}

	
	public void start(){
		int input;
		do{
			displayMenu(); //메뉴 출력
			input = scan.nextInt(); // 메뉴번호 입력받기
			switch(input){
				case 1 :  // 전체목록 출력
					displayAll();
					break;
				case 2 :  // 새 글 작성
					insertList();
					break;
				case 3 :  // 자료 수정
//					updateList();
					break;
				case 4 :  // 자료 삭제
//					deleteList();
					break;
				case 5 : // 자료 검색
//					searchList();
				case 6 :  // 작업 끝
					System.out.println("작업을 마칩니다.");
					break;
				default :
					System.out.println("번호를 잘못 입력했습니다. 다시입력하세요");
			}
		}while(input!=6);
	}	
	
	private void displayAll() {
		System.out.println();
		System.out.println("---------------------------------------");
		System.out.println(" 번호\t제 목\t작성자\t날짜\t내용");
		System.out.println("---------------------------------------");
		
		
		List<BoardVO> boardList = boardService.getAllBoardList();
		
		for(BoardVO bv : boardList) {
			System.out.println(bv.getBoardno() 
					+ "\t" + bv.getBoardtitle() + "\t"
							+ bv.getBoardwriter() + "\t"
					+ bv.getBoarddate() + "\t" + bv.getBoardcontent());
		}
		
		System.out.println("---------------------------------------");
		System.out.println("출력 작업 끝...");
	}

	private void insertList() {
		
		
		System.out.print("제목 >> ");
		String boardtitle = scan.next();
		
		System.out.print("작성자 >> ");
		String boardwriter = scan.next();
		
		scan.nextLine(); // 입력버퍼 비우기
		System.out.print("내용 >> ");
		String boardcontent = scan.nextLine();
		
		BoardVO bv = new BoardVO();
		bv.setBoardtitle(boardtitle);
		bv.setBoardwriter(boardwriter);
		bv.setBoarddate("sysdate");
		bv.setBoardcontent(boardcontent);
		
		int cnt = boardService.insertList(bv);
		
		if(cnt > 0) {
			System.out.println("새 글 추가 작업 성공");
		}else {
			System.out.println("새 글 추가 작업 실패!!!");
		}
	}
	

	public static void main(String[] args) {
		BoardMain boardObj = new BoardMain();
		boardObj.start();
		






	}

}
